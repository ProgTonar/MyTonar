{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/services/getRole.ts"],"sourcesContent":["import {  IRole } from '@/type/Types'\nimport axios from 'axios'\n\nexport async function getRole(): Promise<IRole[]> {\n\ttry {\n        const token = localStorage.getItem('access_token');\n        \n        if (!token) {\n          throw new Error('Токен авторизации не найден');\n        }\n        \n        const response = await axios.get(`http://localhost:9091/api/roles`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              withCredentials: true\n        });\n        \n        return response.data.users;\n      } catch (error) {\n        console.error('Ошибка при получении списка ролей:', error);\n        return [];\n      }\n}"],"names":[],"mappings":";;;AACA;;AAEO,eAAe;IACrB,IAAI;QACG,MAAM,QAAQ,aAAa,OAAO,CAAC;QAEnC,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,+BAA+B,CAAC,EAAE;YAChE,SAAS;gBACL,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBAClC,gBAAgB;YAClB;YACA,iBAAiB;QACvB;QAEA,OAAO,SAAS,IAAI,CAAC,KAAK;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,EAAE;IACX;AACN","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/app/dashboard/role/client.tsx"],"sourcesContent":["'use client'\n\nimport { getRole } from \"@/services/getRole\";\nimport { IRole } from \"@/type/Types\";\nimport { useEffect, useState } from \"react\";\n\n\nexport default function RoleClient() {\n    const [roles, setRoles] = useState<IRole[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n\n    useEffect(() => {\n        const fetchRoles = async () => {\n          try {\n            const data = await getRole();\n            setRoles(data);\n          } catch (error) {\n            console.error('Ошибка загрузки ролей:', error);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        fetchRoles();\n      }, []);\n\n\n      if (isLoading) {\n        return <div >Загрузка ролей и разрешений...</div>;\n      }\n\n    return (\n        <div>\n            {roles.map((role, index) => (\n                <div key={index}>{role.name}</div>\n            ))}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAOe,SAAS;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAG3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACN,MAAM;mDAAa;oBACjB,IAAI;wBACF,MAAM,OAAO,MAAM,CAAA,GAAA,6HAAA,CAAA,UAAO,AAAD;wBACzB,SAAS;oBACX,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,0BAA0B;oBAC1C,SAAU;wBACR,aAAa;oBACf;gBACF;;YACA;QACF;+BAAG,EAAE;IAGL,IAAI,WAAW;QACb,qBAAO,6LAAC;sBAAK;;;;;;IACf;IAEF,qBACI,6LAAC;kBACI,MAAM,GAAG,CAAC,CAAC,MAAM,sBACd,6LAAC;0BAAiB,KAAK,IAAI;eAAjB;;;;;;;;;;AAI1B;GA/BwB;KAAA","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}