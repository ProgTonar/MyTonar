{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/services/getUser.ts"],"sourcesContent":["import {  IUser } from '@/type/Types'\nimport axios from 'axios'\n\nexport async function getUser(): Promise<IUser[]> {\n\ttry {\n        const token = localStorage.getItem('access_token');\n        \n        if (!token) {\n          throw new Error('Токен авторизации не найден');\n        }\n        \n        const response = await axios.get(`http://localhost:9091/api/users`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              withCredentials: true\n        });\n        \n        return response.data.users;\n      } catch (error) {\n        console.error('Ошибка при получении списка пользователей:', error);\n        return [];\n      }\n}"],"names":[],"mappings":";;;AACA;;AAEO,eAAe;IACrB,IAAI;QACG,MAAM,QAAQ,aAAa,OAAO,CAAC;QAEnC,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,+BAA+B,CAAC,EAAE;YAChE,SAAS;gBACL,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBAClC,gBAAgB;YAClB;YACA,iBAAiB;QACvB;QAEA,OAAO,SAAS,IAAI,CAAC,KAAK;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,OAAO,EAAE;IACX;AACN","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/app/dashboard/users/page.tsx"],"sourcesContent":["'use client'\n\nimport { getUser } from \"@/services/getUser\";\nimport { IUser } from \"@/type/Types\";\nimport { useEffect, useState } from \"react\";\n\n\nexport default function UserClient() {\n    const [users, setUsers] = useState<IUser[]>([]);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const data = await getUser();\n      setUsers(data);\n    };\n    fetchUsers();\n  }, []);\n\n    return (\n        <div>\n            {users.map(user => (\n                user.login\n            ))}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAOe,SAAS;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM;mDAAa;oBACjB,MAAM,OAAO,MAAM,CAAA,GAAA,6HAAA,CAAA,UAAO,AAAD;oBACzB,SAAS;gBACX;;YACA;QACF;+BAAG,EAAE;IAEH,qBACI,6LAAC;kBACI,MAAM,GAAG,CAAC,CAAA,OACP,KAAK,KAAK;;;;;;AAI1B;GAlBwB;KAAA","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}