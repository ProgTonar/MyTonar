{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/app/home/client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/home/client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/home/client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/app/home/client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/home/client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/home/client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuQ,GACpS,qCACA","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/services/getBusService.ts"],"sourcesContent":["import { IRoute } from '@/type/Types'\nimport axios from 'axios'\n\nexport async function getBusRoutes(): Promise<IRoute[]> {\n\ttry {\n        const response = await axios.get('http://127.0.0.1:9092/api/bus-navigation')\n        return response.data     \n    } catch (error) {\n        console.error('Ошибка получения маршрутов:', error)\n        throw error\n    }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,eAAe;IACrB,IAAI;QACG,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QACjC,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/services/getNewsService.ts"],"sourcesContent":["import { INews } from '@/type/Types'\nimport axios from 'axios'\n\nexport async function getNewsRoutes(): Promise<INews[]> {\n\ttry {\n        const response = await axios.get('http://127.0.0.1:9092/api/news')\n\n        return response.data     \n    } catch (error) {\n        console.error('Ошибка получения новости:', error)\n        throw error\n    }\n}\n\n\nexport async function getNewsById(id: string): Promise<INews> {\n    const ids = parseInt(id, 10)\n    try {\n        const response = await axios.post(`http://127.0.0.1:9092/api/news/detail?id=${ids}`)\n\n        return response.data     \n    } catch (error) {\n        console.error('Ошибка получения новости:', error)\n        throw error\n    }\n}"],"names":[],"mappings":";;;;AACA;;AAEO,eAAe;IACrB,IAAI;QACG,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QAEjC,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACV;AACJ;AAGO,eAAe,YAAY,EAAU;IACxC,MAAM,MAAM,SAAS,IAAI;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,yCAAyC,EAAE,KAAK;QAEnF,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/data/portalsData.ts"],"sourcesContent":["export interface PortalItem {\n\ttitle: string\n\tdescription: string\n\tdisabled: boolean\n\ticon: string\n\tpath: string\n}\n\nexport const portalsData: PortalItem[] = [\n\t{\n\t\ttitle: 'Интерактивная карта оборудования',\n\t\tdescription: '',\n\t\tdisabled: false,\n\t\ticon: '',\n\t\tpath: '/',\n\t},\n\t{\n\t\ttitle: 'Корпоративные документы',\n\t\tdescription: '',\n\t\tdisabled: false,\n\t\ticon: '',\n\t\tpath: '/',\n\t},\n\t{\n\t\ttitle: 'Гарантийный портал',\n\t\tdescription: '',\n\t\tdisabled: false,\n\t\ticon: '',\n\t\tpath: '/',\n\t},\n\t{\n\t\ttitle: 'УМТС',\n\t\tdescription: 'В разработке',\n\t\tdisabled: true,\n\t\ticon: '',\n\t\tpath: '/',\n\t},\n]\n"],"names":[],"mappings":";;;AAQO,MAAM,cAA4B;IACxC;QACC,OAAO;QACP,aAAa;QACb,UAAU;QACV,MAAM;QACN,MAAM;IACP;IACA;QACC,OAAO;QACP,aAAa;QACb,UAAU;QACV,MAAM;QACN,MAAM;IACP;IACA;QACC,OAAO;QACP,aAAa;QACb,UAAU;QACV,MAAM;QACN,MAAM;IACP;IACA;QACC,OAAO;QACP,aAAa;QACb,UAAU;QACV,MAAM;QACN,MAAM;IACP;CACA","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/services/portalService.ts"],"sourcesContent":["import { PortalItem, portalsData } from '@/data/portalsData'\n\nexport async function getPortals(): Promise<PortalItem[]> {\n\treturn portalsData\n}\n\nexport async function getPortalById(\n\tid: string\n): Promise<PortalItem | undefined> {\n\tconst portals = await getPortals()\n\treturn portals.find(portal => portal.path === id)\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IACrB,OAAO,0HAAA,CAAA,cAAW;AACnB;AAEO,eAAe,cACrB,EAAU;IAEV,MAAM,UAAU,MAAM;IACtB,OAAO,QAAQ,IAAI,CAAC,CAAA,SAAU,OAAO,IAAI,KAAK;AAC/C","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/andrey/Projects/MyTonarFront/src/app/page.tsx"],"sourcesContent":["import HomeClient from \"./home/client\";\nimport { getBusRoutes } from \"@/services/getBusService\";\nimport { getNewsRoutes } from \"@/services/getNewsService\";\nimport { getPortals } from \"@/services/portalService\";\n\nexport default async function Page() {\n  const [routes, portals, news] = await Promise.all([\n    getBusRoutes(),\n    getPortals(),\n    getNewsRoutes(),\n  ]);\n\n  return (\n    <HomeClient\n      busRoutes={routes}\n      portals={portals}\n      title={false}\n      news={news}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,CAAC,QAAQ,SAAS,KAAK,GAAG,MAAM,QAAQ,GAAG,CAAC;QAChD,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;QACX,CAAA,GAAA,gIAAA,CAAA,aAAU,AAAD;QACT,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD;KACb;IAED,qBACE,8OAAC,6HAAA,CAAA,UAAU;QACT,WAAW;QACX,SAAS;QACT,OAAO;QACP,MAAM;;;;;;AAGZ","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}